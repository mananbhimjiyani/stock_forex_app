name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests
      - name: Run tests
        run: |
          export DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          export DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}
          export DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}
          python manage.py test

  deploy-to-aws:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Deploy to S3 (for static files)
      - name: Deploy to S3
        if: contains(github.event.head_commit.message, '[s3]')
        run: |
          aws s3 sync ./static s3://${{ secrets.S3_BUCKET_NAME }}/static

      # Update DynamoDB Tables
      - name: Update DynamoDB Tables
        if: contains(github.event.head_commit.message, '[dynamodb]')
        run: |
          aws dynamodb update-table \
            --table-name ${{ secrets.DYNAMODB_TABLE_NAME }} \
            --billing-mode PAY_PER_REQUEST

      # Verify deployment
      - name: Verify deployment
        run: |
          echo "Deployment successful!"